<script type="text/javascript" src="/js/jquery.validate.min.js"></script>
<script type="text/javascript" src="/js/pubCommon.js"></script>

		<!-- Contents -->
		<div class="mp-contents">
            <div class="mp-tit">
                <h2>Token sale</h2>
                <p class="desc">Follow the instructions below carefully to participate in presale.</p>
            </div>
            <section class="mp-section step">
                <div class="step-head cf">
                    <div class="s-tit">
                        <em class="n">Step 3</em><span class="t">Enter participation amount</span>
                    </div>
                    <div class="step">
                        <ul>
                            <li>1</li>
                            <li>2</li>
                            <li class="active">3</li>
                            <li>4</li>
                        </ul>
                    </div>
                </div>
                <form id="tokenSaleForm" name="tokenSaleForm">
                    <input type="hidden" id="coinType" name="coinType"/>
                    <input type="hidden" id="coinExchangeRate" name="coinExchangeRate" />
                    <input type="hidden" id="bonusRate" name="bonusRate" />
                    <div class="step-body">
                        <div class="s-desc">Select either BTC or ETH and enter the amount to participate.<br>According to the participating cryptocurrency, the relevant wallet address for participation will be provided at the final step.</div>
                        <h3 class="g-tit">Enter participation amount</h3>
                        <div class="cont-box">
                            <div class="form-row flex">
                                <div class="fm-label bu-check">Token</div>
                                <div class="fm-check-group inline">
                                    <label class="fm-check">
                                        <input type="radio" id="BTCRadio" name="tokenRadio" value="BTC" checked=""><span class="txt">BTC</span>
                                    </label>
                                    <label class="fm-check">
                                        <input type="radio" id="ETHRadio" name="tokenRadio" value="ETH"><span class="txt">ETH</span>
                                    </label>
                                </div>
                            </div>
                            <div class="inner">
                                <div class="table-wrap list1" id="icoPlan">
                                    <!-- ico 계획 테이블 자리 -->
                                </div>
                                <div class="amount-wrap">
                                    <p class="txt-rate" id="BTCExchangeRate" name="exchangeRate" style="display:none;">Exchange rate - 1BTC : 0.00000000OSB</p><!-- BTC 선택시 -->
                                    <p class="txt-rate" id="ETHExchangeRate" name="exchangeRate" style="display:none;">Exchange rate - 1ETH : 0.00000000OSB</p><!-- ETH 선택시 -->
                                    <div class="form-row flex">
                                        <label class="fm-label" for="btc">Participation amount:</label>
                                        <div class="fm-input right">
                                            <input type="text" placeholder="" id="partiAmount" name="partiAmount" oninput="amtCheck()">
                                        </div>
                                        <div class="fm-unit" id="partiCoinType">BTC</div>
                                    </div>
                                    <div class="form-row flex">
                                        <label class="fm-label" for="mat">Expected amount:</label>
                                        <div class="fm-input right">
                                            <input type="text" placeholder="" id="expectAmount" name="expectAmount" readonly>
                                        </div>
                                        <div class="fm-unit">OSB</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- <div class="notice">
                            <ul>
                                <li>The actual deposited amount will be accepted as participation regardless of the amount entered for participation.</li>
                                <li>The participating amount should be more than the minimum amount excluding transaction fee.</li>
                                <li>Participations without deposits after applying will be deleted when applying again.</li>
                            </ul> 
                        </div> -->
                        <div class="btn-wrap">
                            <button type="button" class="btn bu prev" onclick="btnBack()">Back</button>
                            <button type="button" class="btn bu next" id="btnProceed" name="btnProceed" onclick="$('#tokenSaleForm').submit()">Proceed</button>
                        </div>
                    </div>
                </form>
            </section>
            <div class="precaution">
                <div class="tit">Precaution</div>
                <ul class="list">
                    <li><span class="num">1.</span><span class="txt">The minimum participation amount is <%=config.BTCMin%> BTC / <%=config.ETHMin%> ETH.
                    </span></li>
                    <li><span class="num">2.</span><span class="txt">Participants are responsible for the transaction fee when participating.
                    </span></li>
                    <li><span class="num">3.</span><span class="txt">The final participation amount will be based on the actual transferred amount and not the registered amount.</span></li>
                    <li><span class="num">4.</span><span class="txt">Only the participation amount transferred within 24 hours will be accepted.  
                    </span></li>
                    <li><span class="num">5.</span><span class="txt">Your participation will be automatically canceled if there is no transaction after registering for participation.</span></li>
                    <li><span class="num">6.</span><span class="txt">The amount of OSB displayed includes the bonus.</span></li>
                    <li><span class="num">7.</span><span class="txt">In case you have not transferred as the registered amount, you cannot make a new registration for participation.<br>The existing registration should be fulfilled to make a new registration.
                    </span></li>
                </ul>
            </div>
    
        </div>
        <!-- //Contents -->

<script>
    $(function() {
        $("[name='lTokenSale']").addClass("active");
        $("#mMenuLayer").text("Token sale");

        $("input[name='tokenRadio']").change(function() {
            getInitData($(this).val());
        });

        getInitData('');

        $("#tokenSaleForm").validate({
            rules: {
                partiAmount: {
                    checkAmt: true
                }
            },
            highlight: function(element, errorClass) {
                if (errorClass == "error") {
                    $(element).parent().addClass("error");
                }
            },
            errorPlacement: function(err, el) {
                el.after(err);
                var errCls = el.attr("class");
                if (errCls == "error") {
                    $(el).parent().addClass("error");
                }
            },
            success: function(el) {
                var errCls = el.attr("class");
                $(el).parent().removeClass("error");
            },
            submitHandler: function (form) {
                localStorage.setItem('localCoinType', $("input[name='tokenRadio']:checked").val());
                localStorage.setItem('localInvAmt', $("#partiAmount").val());

                var coinType = $("input[name='tokenRadio']:checked").val();
                $("#coinType").val(coinType);
                
                $.ajax({
                    url: '/mypage/tokenSalePartiInputAjax',
                    data: $("#tokenSaleForm").serialize(), 
                    type: 'POST',
                    dataType: 'json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Authorization', "Bearer " + token);
                    },
                    success: function(data){
                        data.refToken ? localStorage.setItem('access_token', data.refToken) : '';
                        if (data.result) {
                            location.href = "/mypage/tokenSale4";
                        } else {
                            if (data.loginFlg) {
                                location.href = '/login';
                            } else if (data.falseKYC) {
                                alert(data.message);
                                btnBack();
                            } else {
                                alert(data.message);
                            }
                        }
                    }
                    , error: function(error) {
                        alert('Error occurred.');
                    }
                });
            }
        });
    });

    var minimunVal = '';
    $.validator.addMethod('checkAmt', function() {
        var coinType = $("#coinType").val();
        var inAmt = parseFloat($("#partiAmount").val() ? $("#partiAmount").val() : '0');
        if (coinType == 'BTC') {
            if (inAmt >= <%=config.BTCMin%>) {
                return true;
            } else {
                minimunVal = <%=config.BTCMin%> + ' BTC.';
                return false;
            }
            //return (inAmt >= 0.01);  // 테스트에 따른 변경 0.1 -> 0.01
        } else if (coinType == 'ETH') {
            if (inAmt >= <%=config.ETHMin%>) {
                return true;
            } else {
                minimunVal = <%=config.ETHMin%> + ' ETH.';
                return false;
            }
            //return (inAmt >= 0.1);  // 테스트에 따른 변경 1 -> 0.1
        } else {
            return false;
        }
    }, function() {
        return 'The minimum participant amount is ' + minimunVal;
    });

    function getInitData(inType) {
        var localCoinType;
        if (inType) {
            localCoinType = inType;
        } else {
            localCoinType = localStorage.getItem('localCoinType') ? localStorage.getItem('localCoinType') : '';
        }
        var localInvAmt = localStorage.getItem('localInvAmt') ? localStorage.getItem('localInvAmt') : '';
        if (localCoinType) {
            $("#" + localCoinType + "Radio").prop('checked', true);
        }
        var coinType = $("input[name='tokenRadio']:checked").val();


        $("#coinType").val(coinType);
        $("#partiCoinType").text(coinType);

        $.ajax({
            url: '/mypage/tokenSaleExchangeInfoAjax',
            data: {'coinType': coinType},
            type: 'POST',
            dataType: 'json',
            beforeSend: function (xhr) {
                xhr.setRequestHeader('Authorization', "Bearer " + token);
            },
            success: function(data){
                data.refToken ? localStorage.setItem('access_token', data.refToken) : '';
                if (data.result) {
                    var icoInfo = data.icoInfo;
                    var coinPlans = data.coinPlan;

                    if (!icoInfo) {
                        if (confirm("This is not a presale period.\nGo to the main screen?")) {
                            location.href = '/main';
                        }
                    } else {
                        $("[name='exchangeRate']").hide();
                        $("#" + coinType + "ExchangeRate").show();
                        $("#" + coinType + "ExchangeRate").text("Exchange rate - 1" + coinType + " : " + numberWithCommas(parseFloat(icoInfo.per_amt).toFixed(8)) + " OSB");
                        $("#coinExchangeRate").val(icoInfo.per_amt);

                        if (localInvAmt) {
                            $("#partiAmount").val(localInvAmt);
                            $("#expectAmount").val((parseFloat(localInvAmt) * parseFloat(icoInfo.per_amt) + (parseFloat(localInvAmt) * parseFloat(icoInfo.per_amt) * parseFloat(icoInfo.bonus_rate) / 100)).toFixed(8));
                        } else {
                            $("#partiAmount").val('');
                            $("#expectAmount").val('');
                        }

                        var colgroup = "";
                        var thead = "";
                        var tbody = "";
                        var colgroupPer = (100 / coinPlans.length);
                        for (var i = 0; i < coinPlans.length; i++) {
                            var thClass = coinPlans[i].open_yn == 'Y' ? 'class="active"' : '';
                            if (coinPlans.length == 1) {
                                colgroup += "<col style='width:" + colgroupPer + "%;'>";
                                thead += "<th " + thClass + ">" + coinPlans[i].degree + " PRE-SALE</th>";
                            } else if ((i + 1) == coinPlans.length) {
                                colgroup += "<col style=''>";
                                thead += "<th " + thClass + ">TGE</th>";
                            } else {
                                colgroup += "<col style='width:" + colgroupPer + "%;'>";
                                thead += "<th " + thClass + ">" + coinPlans[i].degree + " PRE-SALE</th>";
                            }
                        }

                        for (var i = 0; i < 3; i++) {
                            var classBlFlg = false;
                            tbody += "        <tr>";
                            for (var j = 0; j < coinPlans.length; j++) {
                                var classVal = coinPlans[j].open_yn == 'Y' ? 'active' : '';
                                var bonusVal = coinPlans[j].bonus_rate ? coinPlans[j].bonus_rate : '0';
                                if (i == 0) {   // 투자계획 첫번째 행
                                    if (coinPlans.length > 1 && coinPlans[j].successYn == 'Y') { //  종료된 계획
                                        tbody += "    <td rowspan='2' class='success'>";
                                        tbody += "        <img src='/images/img-success.png' alt='Success'>";
                                        tbody += "    </td>";
                                        classBlFlg = true;
                                    } else {
                                        tbody += "    <td class='" + classVal + "'>";
                                        tbody += "        <div class='m-line'>";
                                        tbody += "            <em>" + bonusVal + "%</em>Bonus";
                                        tbody += "        </div>";
                                        tbody += "    </td>";
                                    }
                                }
                                if (i == 1) {   // 투자계획 두번째 행
                                    if (coinPlans.length > 1 && coinPlans[j].successYn == 'Y') { //  종료된 계획
                                        classBlFlg = true;
                                    } else {
                                        if (classBlFlg) {
                                            classVal = classVal + ' bl';
                                        }
                                        tbody += "    <td class='" + classVal + "'>";
                                        tbody += "        <div class='m-line'>";
                                        tbody += "            <em>" + (1 / coinPlans[j].per_amt).toFixed(8) + " " + coinType + "</em>Token rate 1 OSB";
                                        tbody += "        </div>";
                                        tbody += "    </td>";
                                    }
                                }
                                if (i == 2) {   // 투자계획 세번째 행
                                    tbody += "    <td class='" + classVal + "'>";
                                    tbody += "        <div class='m-line'>";
                                    tbody += "            <em>" + coinPlans[j].fromDate + "-" + coinPlans[j].toDate + "</em>Sale Period " + coinPlans[j].fyear;
                                    tbody += "        </div>";
                                    tbody += "    </td>";
                                }
                                if (coinPlans[j].open_yn == 'Y') {
                                    $("#bonusRate").val(bonusVal);
                                }
                            }
                            tbody += "        </tr>";
                        }
                        var innerHtml = " <table>";
                        innerHtml += "        <colgroup>" + colgroup + "</colgroup>";
                        innerHtml += "        <thead><tr>" + thead + "</tr></thead>";
                        innerHtml += "        <tbody>" + tbody + "</tbody>";
                        innerHtml += "    </table>";
                        $("#icoPlan").html(innerHtml);

                        var inAmt = parseFloat($("#partiAmount").val() ? $("#partiAmount").val() : '0');
                        if ((coinType == 'BTC' && inAmt >= <%=config.BTCMin%>) || (coinType == 'ETH' && inAmt >= <%=config.ETHMin%>)) {     // 테스트에 따른 변경 BTC 0.1 -> 0.01 , ETH 0.1 -> 0.01
                            $("[name='btnProceed']").prop("disabled", false);
                        } else {
                            $("[name='btnProceed']").prop("disabled", true);
                        }
                        headerFooterPosition(); // 회면 사이즈 재설정
                    }
                } else {
                    alert(data.message);
                }
            }
            , error: function(error) {
                alert('Error occurred.');
            }
        });
    }

    function amtCheck() {
        var inAmt = $("#partiAmount").val() ? $("#partiAmount").val() : '0';
        // 숫자, '.'만 허용
        var lastTxt = inAmt.substring(inAmt.length-1, inAmt.length);
        var pattern1 = /^[0-9]|[.]$/;
        if (!pattern1.test(lastTxt)) {
            inAmt = inAmt.substring(0, inAmt.length-1);
            $("#partiAmount").val(inAmt);
            return false;
        }
        // '.'이 1개만 허용
        var dotLen = inAmt.match(/[.]/g);
        if (dotLen != null && 1 < dotLen.length) {
            inAmt = inAmt.substring(0, inAmt.length-1);
            $("#partiAmount").val(inAmt);
            return false;
        }
        // 소숫점 8자리까지만 허용
        var pattern = /^\d*[.]\d{9}$/;
        if (pattern.test(inAmt)) {
            alert("You can not enter more than 8 decimals.");
            inAmt = inAmt.substring(0, inAmt.length-1);
            $("#partiAmount").val(inAmt);
            return false;
        }
        inAmt = parseFloat(inAmt ? inAmt : '0');
        var exRate = parseFloat($("#coinExchangeRate").val()).toFixed(8);

        var bonusRate = parseFloat($("#bonusRate").val()) / 100;

        var expectAmt = inAmt * exRate;
        var bonusAmt = inAmt * exRate * bonusRate;
        expectAmt = expectAmt + bonusAmt;
        $("#expectAmount").val(numberWithCommas(expectAmt.toFixed(8)));
        var id = $("[name='coinType']").val();
        if ((id == 'BTC' && inAmt >= <%=config.BTCMin%>) || (id == 'ETH' && inAmt >= <%=config.ETHMin%>)) { // 테스트에 따른 변경 BTC 0.1 -> 0.01 , ETH 0.1 -> 0.01
            $("[name='btnProceed']").prop("disabled", false);
        } else {
            $("[name='btnProceed']").prop("disabled", true);
        }
    }

    function btnBack() {
        $.ajax({
            url: '/mypage/proceedSetStepAjax',
            data: {'type': 'T', 'step': '1'},
            type: 'POST',
            dataType: 'json',
            beforeSend: function (xhr) {
                xhr.setRequestHeader('Authorization', "Bearer " + token);
            },
            success: function(data){
                data.refToken ? localStorage.setItem('access_token', data.refToken) : '';
                if (data.result) {
                    location.href = '/mypage/tokenSale2';
                } else {
                    if (data.loginFlg) {
                        location.href = '/login';
                    } else {
                        alert(data.message);
                    }
                }
            }
            , error: function(error) {
                alert('Error occurred.');
            }
        });
    }

    function setStep(info) {
        if ((info.userd_type == 'P' && info.kyc_yn != 'Y') || (info.userd_type == 'C' && info.agree_admin != 'Y')) {
            alert("Not yet completed KYC.");
            btnBack();
        } else {
            if (info.completeSep) {
                if (info.completeSep != '2') {
                    if (info.completeSep == '4') {
                        location.href = '/mypage/tokenSale2';
                    } else {
                        location.href = '/mypage/tokenSale' + (parseInt(info.completeSep) + 1);
                    }
                }
            } else {
                location.href = '/mypage/tokenSale1';
            }
        }
    }

</script>